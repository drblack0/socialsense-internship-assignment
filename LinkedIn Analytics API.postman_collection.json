{
	"info": {
		"_postman_id": "7f2fb3c4-c447-4ca9-ba96-c5e8eb7aad04",
		"name": "LinkedIn Analytics API",
		"description": "A collection to test all endpoints for the FastAPI backend.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "48416967",
		"_collection_link": "https://kartik03012-6233287.postman.co/workspace/Kartik-Saxena's-Workspace~9cee1393-80c6-474c-8aef-eeb5d4c02d47/collection/48416967-7f2fb3c4-c447-4ca9-ba96-c5e8eb7aad04?action=share&source=collection_link&creator=48416967"
	},
	"item": [
		{
			"name": "1. Authentication",
			"item": [
				{
					"name": "Login as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.collectionVariables.set(\"admin_token\", response.access_token);",
									"console.log(\"Admin Token Set: \", pm.collectionVariables.get(\"admin_token\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "adminpassword",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/login/access-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"login",
								"access-token"
							]
						},
						"description": "Logs in the admin user created via script. It saves the returned token to a collection variable named `admin_token`."
					},
					"response": []
				},
				{
					"name": "Login as Normal User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.collectionVariables.set(\"user_token\", response.access_token);",
									"console.log(\"User Token Set: \", pm.collectionVariables.get(\"user_token\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "testuser",
									"type": "text"
								},
								{
									"key": "password",
									"value": "testpass",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/login/access-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"login",
								"access-token"
							]
						},
						"description": "Logs in the normal user. It saves the returned token to a collection variable named `user_token`."
					},
					"response": []
				}
			]
		},
		{
			"name": "2. Users (Admin Only)",
			"item": [
				{
					"name": "Create a Normal User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"testpass\",\n    \"role\": \"user\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								""
							]
						},
						"description": "Requires an admin token to create a new user."
					},
					"response": []
				},
				{
					"name": "Get All Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								""
							]
						},
						"description": "Requires an admin token to retrieve a list of all users in the system."
					},
					"response": []
				}
			]
		},
		{
			"name": "3. Posts & Analytics",
			"item": [
				{
					"name": "Create a Post (as Normal User)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"This is my first post using the new analytics platform!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								""
							]
						},
						"description": "Creates a new post. This request uses the `user_token` for authentication."
					},
					"response": []
				},
				{
					"name": "Get My Own Posts (as Normal User)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								""
							]
						},
						"description": "When authenticated as a normal user, this endpoint returns only the posts created by that user."
					},
					"response": []
				},
				{
					"name": "Get All Posts with Filters (as Admin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/?user_id=2&start_time=2023-01-01T00:00:00",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								""
							],
							"query": [
								{
									"key": "user_id",
									"value": "2",
									"description": "Filter by the ID of the user who made the post. (e.g., the 'testuser' is likely ID 2)."
								},
								{
									"key": "start_time",
									"value": "2023-01-01T00:00:00",
									"description": "ISO 8601 format."
								},
								{
									"key": "end_time",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "When authenticated as an admin, this endpoint returns all posts and allows for filtering. Try changing the user_id or time range."
					},
					"response": []
				},
				{
					"name": "Get Top 5 Engaging Posts",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/posts/analytics/top-engaging",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"analytics",
								"top-engaging"
							]
						},
						"description": "Fetches a ranked list of the most engaging posts. Requires analytics data to be populated in the database."
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "admin_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_token",
			"value": "",
			"type": "string"
		}
	]
}